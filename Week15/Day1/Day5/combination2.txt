class Solution {
public:
    int sum(vector<int>& v){
        int s=0;
        for(int i=0;i<v.size();i++) s+=v[i];
        return s;
    } 
    void rec(vector<vector<int>>& ans,vector<int>& v,vector<int>& candidates,int target,int idx){
        if(sum(v)>target) return;
        if(sum(v)==target){
            ans.push_back(v);
            return;
        }
        for(int i=idx;i<candidates.size();i++){
            if(i>idx && candidates[i]==candidates[i-1]) continue;
            v.push_back(candidates[i]);
            rec(ans,v,candidates,target,i+1);
            v.pop_back();
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> v;
        sort(candidates.begin(),candidates.end());
        rec(ans,v,candidates,target,0);
        return ans;
    }
};